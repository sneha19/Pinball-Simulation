#BlueJ class context
comment0.params=sides\ radius
comment0.target=PinballSimulation(double,\ double)
comment1.params=vector1\ vector2
comment1.target=double[]\ addVectors(double[],\ double[])
comment1.text=\r\n\ Method\ addVectors\ adds\ two\ vectors\ together\r\n\r\n\ @param\ vector1\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ first\ vector\r\n\ @param\ vector2\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ second\ vector\r\n\ @return\ addition\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ sum\ of\ the\ 2\ vectors\r\n
comment10.params=sides\ radius\ angleTargeted\ MAX
comment10.target=void\ targetedRun(double,\ double,\ java.lang.String,\ int)
comment10.text=\r\n\ Method\ targetedRun\ runs\ the\ simulation\ for\ a\ targeted\ angle\ selection\r\n\r\n\ @param\ sides\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ side\ lengths\ of\ the\ triangle\r\n\ @param\ radius\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ radius\ of\ the\ circle\r\n\ @param\ angleTargeted\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ selection\ of\ angles\r\n\ @param\ MAX\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ number\ of\ trials\r\n
comment11.params=sides\ radius\ angleRandom\ MAX
comment11.target=void\ randomRun(double,\ double,\ java.lang.String,\ int)
comment11.text=\r\n\ Method\ randomRun\ runs\ the\ simulation\ for\ a\ random\ angle\ selection\r\n\r\n\ @param\ sides\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ side\ lengths\ of\ the\ triangle\r\n\ @param\ radius\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ radius\ of\ the\ circle\r\n\ @param\ angleTargeted\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ selection\ of\ angles\r\n\ @param\ MAX\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ number\ of\ trials\r\n
comment12.params=sides\ radius\ angle\ MAX
comment12.target=void\ userRun(double,\ double,\ double,\ int)
comment12.text=\r\n\ Method\ userRun\ runs\ the\ simulation\ for\ a\ user\ selected\ angle\ selection\r\n\r\n\ @param\ sides\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ side\ lengths\ of\ the\ triangle\r\n\ @param\ radius\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ radius\ of\ the\ circle\r\n\ @param\ angleTargeted\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ selection\ of\ angles\r\n\ @param\ MAX\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ number\ of\ trials\r\n
comment2.params=vector1\ vector2
comment2.target=double[]\ subtractVector(double[],\ double[])
comment2.text=\r\n\ Method\ subtractVectors\ subtracts\ two\ vectors\ from\ each\ other\r\n\r\n\ @param\ vector1\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ first\ vector\r\n\ @param\ vector2\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ second\ vector\r\n\ @return\ subtract\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ difference\ between\ the\ 2\ vectors\r\n
comment3.params=vector1\ number
comment3.target=double[]\ multiplyVector(double[],\ double)
comment3.text=\r\n\ Method\ multiplyVector\ multiplies\ a\ vector\ by\ a\ scaler\r\n\r\n\ @param\ vector1\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ first\ vector\r\n\ @param\ number\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ scaler\r\n\ @return\ multiply\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ multiplied\ vector\r\n
comment4.params=vector1\ vector2
comment4.target=double\ dotProductVector(double[],\ double[])
comment4.text=\r\n\ Method\ dotProductVector\ finds\ the\ dot\ product\ between\r\n\ two\ vectors\r\n\r\n\ @param\ vector1\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ first\ vector\r\n\ @param\ vector2\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ second\ vector\r\n\ @return\ dot\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ dot\ product\ result\r\n
comment5.params=center\ radius\ temp\ vector
comment5.target=double\ firstIntersection(double[],\ double,\ double[],\ double[])
comment5.text=\r\n\ Method\ firstIntersection\ returns\ the\ time\ it\ takes\ for\r\n\ the\ first\ intersection\ to\ be\ made\r\n\r\n\ @param\ center\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ center\ of\ the\ circle\r\n\ @param\ radius\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ radius\ of\ the\ circle\r\n\ @param\ temp\r\n\ \ \ \ \ \ \ \ which\ represents\ a\ temporary\ array\r\n\ @param\ vector\r\n\ \ \ \ \ \ \ \ which\ represents\ another\ vector\r\n\ @return\ intersection\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ time\ of\ the\ first\ intersection\r\n
comment6.params=center\ temp\ vector
comment6.target=double[]\ reflect(double[],\ double[],\ double[])
comment6.text=\r\n\ Method\ reflect\ returns\ the\ new\ vecotiy\ vector\ after\r\n\ a\ particular\ reflection\r\n\r\n\ @param\ center\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ center\ of\ a\ circle\r\n\ @param\ temp\r\n\ \ \ \ \ \ \ \ which\ represents\ a\ temporary\ array\r\n\ @param\ vector\r\n\ \ \ \ \ \ \ \ which\ represents\ another\ vector\r\n\ @return\ reflection\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ new\ velocity\ vector\r\n
comment7.params=vector\ location
comment7.target=boolean\ intercept(double[],\ double[])
comment7.text=\r\n\ Method\ intercept\ determines\ whether\ the\ two\ vectors\ are\ at\ an\ intersect\r\n\r\n\ @param\ vector\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ first\ vector\r\n\ @param\ location\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ location\ vector\r\n\ @return\ true/false\r\n\ \ \ \ \ \ \ \ \ which\ represents\ whether\ they\ intersect\ or\ not\r\n
comment8.params=startingCoordinate\ velocity
comment8.target=CreateCircle\ interceptOne(double[],\ double[])
comment8.text=\r\n\ Method\ interceptOne\ find\ and\ returns\ the\ smallest\ \r\n\ intercept\ between\ two\ vectors\r\n\r\n\ @param\ startingCoordinate\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ starting\ coordinate\ vector\r\n\ @param\ velocity\r\n\ \ \ \ \ \ \ \ which\ represents\ the\ velocity\ vector\r\n\ @return\ circle1/circle2/circle3\r\n\ \ \ \ \ \ \ \ \ which\ represents\ the\ intersect\r\n
comment9.params=
comment9.target=void\ startup()
comment9.text=\r\n\ This\ is\ a\ simple\ method\ which\ prints\ out\ simple\ text\r\n\ that\ is\ displayed\ in\ the\ terminal\ window\ at\ the\ start\r\n\ of\ each\ simulation\r\n
numComments=13
